{"version":3,"file":"render_store.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/shared/render_store.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;AAGxC;IAKE;QAJQ,eAAU,GAAW,CAAC,CAAC;QAK7B,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAe,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAe,CAAC;IAChD,CAAC;IAED,gCAAU,GAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAElD,2BAAK,GAAL,UAAM,GAAQ,EAAE,EAAU;QACxB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,4BAAM,GAAN,UAAO,GAAQ;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,iCAAW,GAAX,UAAY,EAAU;QACpB,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAED,+BAAS,GAAT,UAAU,GAAQ;QAChB,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IACI,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAA6D,EACjF,CAAC;IACF,kBAAC;AAAD,CAAC,AA/CD,IA+CC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n\nexport class RenderStore {\n  private _nextIndex: number = 0;\n  private _lookupById: Map<number, any>;\n  private _lookupByObject: Map<any, number>;\n\n  constructor() {\n    this._lookupById = new Map<number, any>();\n    this._lookupByObject = new Map<any, number>();\n  }\n\n  allocateId(): number { return this._nextIndex++; }\n\n  store(obj: any, id: number): void {\n    this._lookupById.set(id, obj);\n    this._lookupByObject.set(obj, id);\n  }\n\n  remove(obj: any): void {\n    var index = this._lookupByObject.get(obj);\n    this._lookupByObject.delete(obj);\n    this._lookupById.delete(index);\n  }\n\n  deserialize(id: number): any {\n    if (id == null) {\n      return null;\n    }\n\n    if (!this._lookupById.has(id)) {\n      return null;\n    }\n\n    return this._lookupById.get(id);\n  }\n\n  serialize(obj: any): number {\n    if (obj == null) {\n      return null;\n    }\n    return this._lookupByObject.get(obj);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}