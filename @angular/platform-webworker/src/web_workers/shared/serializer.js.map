{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, Type, ViewEncapsulation} from '@angular/core';\n\nimport {isPresent} from '../../facade/lang';\n\nimport {RenderStore} from './render_store';\nimport {LocationType} from './serialized_types';\n\n\n\n// PRIMITIVE is any type that does not need to be serialized (string, number, boolean)\n// We set it to String so that it is considered a Type.\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const PRIMITIVE: Type<any> = String;\n\n\nexport class Serializer {\n  constructor(private _renderStore: RenderStore) {}\n\n  serialize(obj: any, type: any): Object {\n    if (!isPresent(obj)) {\n      return null;\n    }\n    if (Array.isArray(obj)) {\n      return (<any[]>obj).map(v => this.serialize(v, type));\n    }\n    if (type == PRIMITIVE) {\n      return obj;\n    }\n    if (type == RenderStoreObject) {\n      return this._renderStore.serialize(obj);\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === ViewEncapsulation) {\n      return obj;\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error('No serializer for ' + type.toString());\n  }\n\n  deserialize(map: any, type: any, data?: any): any {\n    if (!isPresent(map)) {\n      return null;\n    }\n\n    if (Array.isArray(map)) {\n      return (<any[]>map).map(val => this.deserialize(val, type, data));\n    }\n\n    if (type === PRIMITIVE) {\n      return map;\n    }\n\n    if (type === RenderStoreObject) {\n      return this._renderStore.deserialize(map);\n    }\n\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n\n    if (type === ViewEncapsulation) {\n      return map as ViewEncapsulation;\n    }\n\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n\n    throw new Error('No deserializer for ' + type.toString());\n  }\n\n  private _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin\n    };\n  }\n\n  private _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n\n  private _serializeRenderComponentType(obj: RenderComponentType): Object {\n    return {\n      'id': obj.id,\n      'templateUrl': obj.templateUrl,\n      'slotCount': obj.slotCount,\n      'encapsulation': this.serialize(obj.encapsulation, ViewEncapsulation),\n      'styles': this.serialize(obj.styles, PRIMITIVE)\n    };\n  }\n\n  private _deserializeRenderComponentType(map: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        map['id'], map['templateUrl'], map['slotCount'],\n        this.deserialize(map['encapsulation'], ViewEncapsulation),\n        this.deserialize(map['styles'], PRIMITIVE), {});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: RenderStore, },\n];\n}\n\n\nexport class RenderStoreObject {}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}