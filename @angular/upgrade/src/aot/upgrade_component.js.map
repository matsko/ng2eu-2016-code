{"version":3,"file":"upgrade_component.js","sourceRoot":"","sources":["../../../../../modules/@angular/upgrade/src/aot/upgrade_component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnInit, SimpleChanges} from '@angular/core';\n\nimport * as angular from '../angular_js';\nimport {looseIdentical} from '../facade/lang';\nimport {controllerKey} from '../util';\n\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $SCOPE, $TEMPLATE_CACHE} from './constants';\n\nconst NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $onInit?: () => void;\n}\n\n/**\n * @experimental\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck {\n  private $injector: angular.IInjectorService;\n  private $compile: angular.ICompileService;\n  private $templateCache: angular.ITemplateCacheService;\n  private $httpBackend: angular.IHttpBackendService;\n  private $controller: angular.IControllerService;\n\n  private element: Element;\n  private $element: angular.IAugmentedJQuery;\n  private $componentScope: angular.IScope;\n\n  private directive: angular.IDirective;\n  private bindings: Bindings;\n  private linkFn: angular.ILinkFn;\n\n  private controllerInstance: IControllerInstance = null;\n  private bindingDestination: IBindingDestination = null;\n\n  constructor(private name: string, private elementRef: ElementRef, private injector: Injector) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$templateCache = this.$injector.get($TEMPLATE_CACHE);\n    this.$httpBackend = this.$injector.get($HTTP_BACKEND);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = this.getDirective(name);\n    this.bindings = this.initializeBindings(this.directive);\n    this.linkFn = this.compileTemplate(this.directive);\n\n    // We ask for the Angular 1 scope from the Angular 2 injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    const controllerType = this.directive.controller;\n    // QUESTION: shouldn't we be building the controller in any case?\n    if (this.directive.bindToController) {\n      if (controllerType) {\n        this.bindingDestination = this.controllerInstance = this.buildController(\n            controllerType, this.$componentScope, this.$element, this.directive.controllerAs);\n      } else {\n        throw new Error(\n            `Upgraded directive '${name}' specifies 'bindToController' but no controller.`);\n      }\n    } else {\n      this.bindingDestination = this.$componentScope;\n    }\n\n    this.setupOutputs();\n  }\n\n  ngOnInit() {\n    // QUESTION: why not just use $compile instead of reproducing parts of it\n    if (!this.directive.bindToController && this.directive.controller) {\n      this.controllerInstance = this.buildController(\n          this.directive.controller, this.$componentScope, this.$element,\n          this.directive.controllerAs);\n    }\n    const attrs: angular.IAttributes = NOT_SUPPORTED;\n    const transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    const linkController = this.resolveRequired(this.$element, this.directive.require);\n\n    const link = this.directive.link;\n    const preLink = (typeof link == 'object') && (link as angular.IDirectivePrePost).pre;\n    const postLink = (typeof link == 'object') ? (link as angular.IDirectivePrePost).post : link;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, linkController, transcludeFn);\n    }\n\n    var childNodes: Node[] = [];\n    var childNode: Node;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    const attachElement: angular.ICloneAttachFunction =\n        (clonedElements, scope) => { this.$element.append(clonedElements); };\n    const attachChildNodes: angular.ILinkFn = (scope, cloneAttach) => cloneAttach(childNodes);\n\n    this.linkFn(this.$componentScope, attachElement, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, linkController, transcludeFn);\n    }\n\n    if (this.controllerInstance && this.controllerInstance.$onInit) {\n      this.controllerInstance.$onInit();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => { this.bindingDestination[propName] = changes[propName].currentValue; });\n\n    if (this.bindingDestination.$onChanges) {\n      this.bindingDestination.$onChanges(changes);\n    }\n  }\n\n  ngDoCheck() {\n    const twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const newValue = this.bindingDestination[propName];\n      const oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const outputName = propertyToOutputMap[propName];\n        const eventEmitter: EventEmitter<any> = (this as any)[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n\n  private getDirective(name: string): angular.IDirective {\n    const directives: angular.IDirective[] = this.$injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    if (directive.compile) this.notSupported('compile');\n    const link = directive.link;\n    // QUESTION: why not support link.post?\n    if (typeof link == 'object') {\n      if ((<angular.IDirectivePrePost>link).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n\n  private initializeBindings(directive: angular.IDirective) {\n    const btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const definition = context[propName];\n        const bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            var json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n\n  private compileTemplate(directive: angular.IDirective): angular.ILinkFn {\n    if (this.directive.template !== undefined) {\n      return this.compileHtml(getOrCall(this.directive.template));\n    } else if (this.directive.templateUrl) {\n      var url = getOrCall(this.directive.templateUrl);\n      var html = this.$templateCache.get(url) as string;\n      if (html !== undefined) {\n        return this.compileHtml(html);\n      } else {\n        throw new Error('loading directive templates asynchronously is not supported');\n        // return new Promise((resolve, reject) => {\n        //   this.$httpBackend('GET', url, null, (status: number, response: string) => {\n        //     if (status == 200) {\n        //       resolve(this.compileHtml(this.$templateCache.put(url, response)));\n        //     } else {\n        //       reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n        //     }\n        //   });\n        // });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  private buildController(\n      controllerType: angular.IController, $scope: angular.IScope,\n      $element: angular.IAugmentedJQuery, controllerAs: string) {\n    var locals = {$scope, $element};\n    var controller = this.$controller(controllerType, locals, null, controllerAs);\n    $element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n\n  private resolveRequired(\n      $element: angular.IAugmentedJQuery, require: angular.DirectiveRequireProperty) {\n    // TODO\n  }\n\n  private setupOutputs() {\n    // Set up the outputs for `=` bindings\n    this.bindings.twoWayBoundProperties.forEach(propName => {\n      const outputName = this.bindings.propertyToOutputMap[propName];\n      (this as any)[outputName] = new EventEmitter();\n    });\n\n    // Set up the outputs for `&` bindings\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const outputName = this.bindings.propertyToOutputMap[propName];\n      const emitter = (this as any)[outputName] = new EventEmitter();\n\n      // QUESTION: Do we want the ng1 component to call the function with `<value>` or with\n      //           `{$event: <value>}`. The former is closer to ng2, the latter to ng1.\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n\n  private notSupported(feature: string) {\n    throw new Error(\n        `Upgraded directive '${this.name}' contains unsupported feature: '${feature}'.`);\n  }\n\n  private compileHtml(html: string): angular.ILinkFn {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return this.$compile(div.childNodes);\n  }\n}\n\n\nfunction getOrCall<T>(property: Function | T): T {\n  return typeof(property) === 'function' ? property() : property;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}