{"version":3,"file":"downgrade_injectable.js","sourceRoot":"","sources":["../../../../../modules/@angular/upgrade/src/aot/downgrade_injectable.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,EAAC,YAAY,EAAC,MAAM,aAAa;AAExC;;;;;;;;;;;GAWG;AACH,oCAAoC,KAAU;IAC5C,MAAM,CAAC,CAAC,YAAY,EAAE,UAAC,CAAW,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAZ,CAAY,CAAC,CAAC;AACvD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n\n/**\n * Create an Angular 1 factory that will return an Angular 2 injectable thing\n * (e.g. service, pipe, component, etc)\n *\n * Usage:\n *\n * ```\n * angular1Module.factory('someService', downgradeInjectable(SomeService))\n * ```\n *\n * @experimental\n */\nexport function downgradeInjectable(token: any) {\n  return [INJECTOR_KEY, (i: Injector) => i.get(token)];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}